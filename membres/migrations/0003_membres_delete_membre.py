# Generated by Django 5.2.4 on 2025-07-16 14:18

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("membres", "0002_membre_confirmation_token_membre_is_confirmed"),
    ]

    operations = [
        migrations.CreateModel(
            name="Membres",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("username", models.CharField(max_length=100, unique=True)),
                ("nom", models.CharField(max_length=100)),
                ("prenom", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("password", models.CharField(max_length=100)),
                (
                    "photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="membres/photos/"
                    ),
                ),
                ("ville", models.CharField(blank=True, max_length=100)),
                ("profession", models.CharField(blank=True, max_length=100)),
                ("statut", models.CharField(blank=True, max_length=50)),
                ("mini_cv", models.TextField(blank=True, null=True)),
                ("facebook", models.URLField(blank=True, null=True)),
                ("linkedin", models.URLField(blank=True, null=True)),
                ("twitter", models.URLField(blank=True, null=True)),
                (
                    "numero_adherent",
                    models.CharField(
                        blank=True, editable=False, max_length=20, unique=True
                    ),
                ),
                (
                    "type_adhesion",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("etudiant", "Ã‰tudiant"),
                            ("freelance", "Freelance"),
                            ("entrepreneur", "Entrepreneur"),
                            ("autre", "Autre"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "confirmation_token",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("is_confirmed", models.BooleanField(default=False)),
                ("date_adhesion", models.DateField(blank=True, null=True)),
                (
                    "montant",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "moyen_paiement",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "numero_transaction",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "date_inscription",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("is_actif", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.DeleteModel(
            name="Membres",
        ),
    ]
